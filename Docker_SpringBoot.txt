1.Docker File Build Commands					  									()							[12-MAR-2021]  ()
2.DockerFile To Build Your Own Docker Images	  									(LearnITGuide Tutorials)    [12-MAR-2021]  ()
3.Build Own Private Docker Hub Registry on Linux  									(LearnITGuide Tutorials)    [12-MAR-2021]  ()
4.Spring Boot with Docker Container				  									(Simple Programming)        [12-MAR-2021]  (Done)
5.Spring Boot with Docker Container				  									(Play Java)                 [12-MAR-2021]  (Done)
6.Spring Boot with Docker Container				  									(Tech Primers)              [12-MAR-2021]  ()
15.Build and Run a Spring Boot Application with Docker								(thepracticaldeveloper)		[12-MAR-2021]  ()
7.Dockerizing using Maven						  									(stackabuse)				[12-MAR-2021]  ()
12.Docker CMD vs ENTRYPOINT


*********************************************************  1.Command to Build the Docker File   ********************************************************* 

FROM  openjdk:8
EXPOSE 9102
ADD target/SpringBootDockerImage.jar SpringBootDockerImage.jar
ENTRYPOINT ["java", "-jar", "/SpringBootDockerImage.jar"]

FROM openjdk:8
ADD target/SpringBootDockerImage.jar SpringBootDockerImage.jar
EXPOSE 9102
ENTRYPOINT ["java", "-jar", "SpringBootDockerImage.jar"]

docker build -f SpringBootDockerImage.jar .
docker build -t SpringBootDockerImage.jar:latest .
docker build -f SpringBootDockerImage .
docker build -f Dockerfile -t SpringBootDockerImage .

*********************************************************  4.Spring Boot with Docker Container (Simple Programming)  *************************************

To Containerize a Spring Boot Application we need a Docker File.
Docker File is a text file that contains instructions to build the Docker Image.

Note :
To build the jar file in target folder of Spring Boot Application run the Maven Command :

	clean install.

Dockerfile :
FROM openjdk:latest
COPY ./target/springboot-docker-0.0.1-SNAPSHOT.jar springboot-docker.jar
WORKDIR F:/DockerImages
ENTRYPOINT [ "java","-jar","/springboot-docker.jar" ]
EXPOSE 8080

To build the Docker image navigate to the Directory where the Dockerfile is present i.e  F:\DevOps\springboot-docker
Then run the command 

	docker build -t springboot-docker:1.0 .
	
To run the docker image we use the command 

	docker run -p 8090:8080 springboot-docker:1.0
	
Here the Application is running in the same Docker Console.
If we want the application to run as background process i.e in detached mode we use the command -d

	docker run -d -p 8090:8080 springboot-docker:1.0
	
To push the Docker image into the Repository we need to tag the image using the commad 

	docker tag springboot-docker:1.0 srinivassankoji/springboot-docker:1.0
	
Then push the image to the Docker Hub using the command 

	docker push srinivassankoji/springboot-docker:1.0
	
********************************************************* 5.Spring Boot with Docker Container (Play Java)   *********************************************************

Note: To customize the name of the jar file we use the command <finalName> in pom.xml

	<finalName>springboot-docker</finalName>
	
Create the Repository in DockerHub

	srinivassankoji/javadeveloper

Then save the image to the DockerHub.
To push the Docker image into the Repository we need to tag the image using the commad 

	docker tag springboot-docker:1.0 srinivassankoji/springboot-docker:1.0
	
Then push the image to the Docker Hub using the command 

	docker push srinivassankoji/springboot-docker:1.0
	
To run the Application using the image which we stored in the DockerHub Repository,First remove the images locally.
Then run the command 

	docker run -d -p 8090:8080 srinivassankoji/springboot-docker:1.0


********************************************************* 5.Spring Boot with Docker Container(Tech Primers)  *********************************************************












 




