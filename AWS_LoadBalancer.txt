1.AWS ALB and NLB with EC2 Container Service				(Nathan Peck)               [04-JUN-2021]  (Done)  (Refer Articles)
2.Introduction to Elastic Load Balancer						(Jayant)					[04-JUN-2021]  ()  	   (Refer Articles)
3.Difference between ALB and NLB							(Ashish Patel)				[04-JUN-2021]  (Done)  (Refer Articles)
4.What Is Load Balancing									(Siddhant Singh)			[01-JUN-2021]  ()
5.AWS Application Load Balancer 10 reasons 					(Florian Jakob)             [01-JUN-2021]  ()
6.AWS ALB with Path based Routing 							(AWS Training Center)		[01-JUN-2021]  ()
7.Production level Load Balancing 							(Crishantha Nanayakkara)    [22-JUN-2021]  ()
8.AWS Application Load Balancer 							(Rahul wagh)                [22-AUG-2024]  ()

****************************************** 1.AWS ALB and NLB with EC2 Container Service (Nathan Peck) ******************************************

1.What is Load Balancer	 			(Done)			
2.Difference between ALB and NLB	(Done)				   (Depends on OSI Model) (Done)
3.ALB and NLB Specific Features		()
4.HTTP Host and Path Based Routing  (Done)
5.Protocols other than HTTP			(Done)
6.Dynamic Ports in ALB and NLB		(Done)
7.Sticky Sessions					(Done)
8.XFF Header						(Done)
9.Health Checks of LLB				(Done)
10.Request Routing					(Done)
11.Integrating NLB and ALB with EC2 Container Service  ()   (Depends on ECS)  ()

1.What is Load Balancer :
-------------------------
Load Balancer plays an important role in building great Internet Applications.
Load Balancer accepts incoming request from Client and based on some criteria it redirects the request to the appropriate server.
Load Balancer can be of physical hardware or virtual software.
Load Balancer provides the benefits of redundancy and scalability.

Redundancy :
As long as there is only one Application Server,
Load Balancer accepts the incoming request from the client and redirects the request to the Application Server.

Scalability :
By running 2 Servers behind the Load Balancer we can now handle 2X requests from the client.
Load Balancer provides a way to add more and more Servers if the incoming network traffic increases.

Load Balancer must have two Availability zones.
Load Balancer cannot be cross region and can be created only one per region.

OSI Model :
OSI model is a conceptual model that characterizes and standardizes the communication mechanism of computing systems without 
regard to its underlying infrastructure and technology.

1.At the Application Layer browser constructs the HTTP request which is a small text document.
HTTP request describes what resource the browser wants to fetch from the Web Server.
2.In order to make sure the communication between web browser and web server is secure,web request is encrypted using SSL/TLS.
This Layer is called Presentation Layer or Translation Layer.
3.To send the encrypted data to the Web server there should be a communication between web browser and web server.
This can be done by providing a session between them.
4.Transport Layer is also called as "Traffic Control" of the networks.
Protcolos include in this Layer are TCP and UDP.
whenever we are communicating with any website Transport Layer will decide how much data can be sent at once etc.
Transport Layer takes care of Data Segmentation and reassembly as well as flow and error control.
Here Encrypted Payload is split into TCP packets.
Each packet is a piece of HTTP payload and the metadata which includes source IP and destination IP.
5.Network Layer is the "post office" of networks.
Role of Network Layer is to move the packets from source to destination.
This is the layer that the Router Operates.
Since the Router operates at the network level we can say that IP Address is at Network Level.
6.Once the destination is identified by the Network Layer,Data Link Layer takes care of controlling the data between network elements.
Data Link Layer ensures that data transfer is error free over the physical Layer.
Functionalities implemented in this Layer includes physical addressing,Framing,Error and Floe Control.
7.Physical Layer is the lowest Layer of the OSI Model and also considered as "Hardware Layer".
Physical Layer is responsible for transfer of bits 0 and 1 "on the wire".

2.Difference between ALB and NLB :
----------------------------------
Communication between the Client and the Load Balancer,Load Balancer and the Backend server hides a lot of complexity.
Here Client has to send its communication down the stack,the communication then travels back up the stack untill it finds the Load Balancer,
Then the Load Balancer sends the communication back down the stack to redirect it to the destination server.
Finally Destination Server travels the stack up again.

1.ALB works at the Application Layer ie Layer 7 of the OSI model where as NLB works at the Transport Layer ie Layer 4 of the OSI Model.
2.In case of ALB,Network communication must travel all the way back to the Application Layer and reads the HTTP request to determine where it should be redirect.
In case of NLB,Network communication must travel all the way to the Transport Layer and reads the TCP packet information to redirect to the correct place.
Here it does not read the content inside those packets.
3.NLB just forward the request where as ALB reads the content of the HTTP Request Header to determine where to redirect the Request.
ALB is content based Routing.
4.NLB cannot assure the availability of the Application because it completely depends on Transport Layer and has no awareness of Application.
where as ALB is capable of determining availability based on successful HTTP GET.

Note :Consider the scenario of deploying Multiple Applications on the same Host sharing IP Address.
NLB cannot differentiate between Application A and Application B when checking Availability because there should be difference in Ports.
ALB can differentiate between the Applications by reading the content of the HTTP Request.
NLB may end up by sending requests to an Application that has crashed or is offline where as ALB will never make the mistake.

3.ALB and NLB Specific Features :
---------------------------------
Not Completed

4.HTTP Host and Path Based Routing :
------------------------------------
"Host and Path based routing" is one of the feature of Application Load Balancer.
If End to End encryption is not needed then we can use "Host and Path based routing".
In case of Host and Path based routing,Application Load Balancer will read the incoming HTTP request.
If the path matches with the pattern then Load Balancer redirects the request to one machine and If doesn't matches redirects the request to Another machine.

Note:
This is very useful in case of Microservice or distributed Archirecture where we have one public API but multiple sections of the same API.
Example:
api/users
api/auth

This type of routing can only be possible with Application Load Balancer because it reads the HTTP Headers of an incoming request.
It is not possible in Network Load Balancer because we only have TCP packets to work with.  

5.Protocols other than HTTP :
-----------------------------
Every Application may not built on top of HTTP.
A Gaming Application might implement its own protocol on top of TCP or UDP for communication between Gaming Client and Gaming Server.
For such communication Application Load Balancer will not work because Load Balancer at this level expects that all the network traffic would be HTTP.

Here Network Load Balancer can be used as it forwards the TCP Packets from Gaming Client to Gaming Server.
Network Load Balancer has less latency because network communication does not have to go all the way up and back down the network stack at the Load Balancer.

6.Dynamic Ports in ALB and NLB :
--------------------------------
One of the Feature that is common in both ALB nad NLB is Dynamic Ports.

Architecture of Traditional Load Balancer :
Backend Servers behind the Load Balancer will run an identical copy of an Application on each instance running on a well known static port.
Load Balancer distributes the request to the same port number on each instance.

Architecture of Advanced Load Balancer :
With the rise of Docker Container and bin packaging we can run multiple Applications on a Single Instance.
Here EC2 instance will be running multiple Containers and each of which has a random port.
These ports are not static and If the Containers shutdown and restarted they may get a different port number.

Both ALB and NLB supports the dynamic port by using an AWS Resource called "Target Group".
Target Group tracks the list of ports that are accepting traffic on each instance and gives the Load Balancer a way to distribute the traffic across the ports.

7.Sticky Sessions :
-------------------
Sticky Session binds a user session to a specific EC2 instance.
It ensures all the requests from that session is sent to that particular instance.
Here cookies are used to remember which EC2 instance.
It is typically used with Class Load Balancer but can be enabled in ALB. 

Example:
Sticky Session will be used If that particular user data is stored in that EC2 instance.

8.XFF Header :
--------------
If the User is accessing the Application and If we want to know the IP Address of the User then we check the X-Forwarded-For Header.

9.Health Checks of LLB :
------------------------
Health Check directly communicates with instances to know its states and reports back as InService or OutOfService.
ELB does not terminate the unhealthy instance and only redirects the traffic to the healthy instance.
For ALB and NLB Health Checks are found on the Target Groups.

10.Request Routing :
--------------------
Request routing is specific to Application Load Balancer.It applies rules to the incomig requests and redirects the request.
Rules can be applied for

Host Header
Http Header
Http Method
Source IP
Path
Query String

11.Integrating NLB and ALB with EC2 Container Service :
-------------------------------------------------------



************************************************* 6.AWS ALB with Path based Routing (AWS Training Center) ***********************************************************





