References :
************
https://medium.com/@niral22/spring-cloud-gateway-tutorial-5311ddd59816
https://medium.com/@niral22/spring-cloud-gateway-tutorial-5311ddd59816
https://github.com/TechPrimers/spring-cloud-gateway-example-1


1.Spring Cloud Gateway Concepts 					(Devglan)					 [31-JUL-2020]  (Done)
2.Spring Cloud Gateway Example 						(Tech Primers)               [31-JUL-2020]  (Done)
3.Spring Cloud API Gateway 							(javainuse)                  [31-JUL-2020]  (Done)

*********************************************************  1.Spring Cloud Gateway Concepts (Devglan) *********************************************************

https://www.devglan.com/spring-cloud/spring-cloud-gateway
https://www.devglan.com/spring-cloud/spring-cloud-gateway-example

0.Introduction
1.Blocking vs Non-Blocking Gateway
2.Spring Cloud Gateway Architecture
3.Handler Mapping
4.Web Handler Filters
5.Post Filters


0.Introduction :
----------------
API Gateway Provides a Single Point of Entry for all the Micro Services Running downStream.
There are Many Gateway Solutions Available Such as Zuul,Linkered,Nginix,Spring Cloud Gateway etc.
Spring Cloud Gateway - A Reactive Gateway Built Upon Project Reactor,Spring WebFlux and Spring Boot 2.0.

1.Blocking vs Non-Blocking Gateway :
------------------------------------
Blocking Gateway Such as Zuul requires request Per Thread to handle the Requests that are Coming From API Gateway.
Hence Lot of Resources Required to Handle these Requests.
Any Extra Request Simply Sit in the Queue and will wait Until a Working Thread Complete its Execution.
Where as In Case of Non Blocking ,A Main Thread will always will be Available to Serve the Request 
and Other Multiple Threads will process those Request Asynchronously in the Background.
Once The Request is Completely Processed Then The Response is Returned.
Hence the Non Blocking Gateway requires less No of Resources to Serve the Same Amount of Requests Compared to Blocking Gateway.
Spring Cloud Gateway is a Non Blocking Reactive Gateway Similar to Zuul2 But Spring Cloud Does Not Provide any Out Of Box Integration with Zuul2.

2.Spring Cloud Gateway Architecture  :
--------------------------------------
Once a Request Reaches to the Gateway,First thing The Gateway does is It matches the Request with each of the available routes based on the predicate Defined.
Once The Request has been Matched,request Moves to the Web Handler and the filters will be applied to the Request.
There are Many out of Box Filters Provided by the Gateway itself to Modify the Request Header as well as the Body.
PreFilters are applied Specifically to a Route Where as Global Filters can be applied to all the Route Requests.
Global Filters can be applied to Perform Authentication and Authorization of all the Requests at one Place.
Once the Response is generated by the downStream Service,Post Filter can be used to modify the response
such as to apply the Checksum in the Response Header to all the Responses to ensure Response is not tampered due to Middle Man Attack.

Reverse Proxy :
***************
Reverse Proxy is Something That It is Making Requests on behalf of Something Else.
It Acts More Like Simple Routing.
It can add Basic Security and Monitoring But Cannot do Some of the Advanced Things Like Mediation and Orchestration.
Nginix is one of the Well Known Reverse Proxy Server.

API Gateway :
*************
API Gateway is enhanced reverse proxy with More Advanced Capabilities Like Mediation and Orchestration.
Some of The Gateway are Netflix Zuul,Amazon API Gateway,Apigee,Spring Cloud Gateway.

Spring Cloud Gateway :
**********************
Spring Cloud Gateway is an API Gateway Implemented By Spring Team on top of Spring Cloud Reactive Eco System.
It Provides a Simple and effective Way to route incoming Requests to The appropriate destination Using Gateway Handler Mapping.
Spring Cloud Uses Netty Server to Provide Non Blocking Asynchronous Request Processing.

Spring Cloud Gateway Consists of 3 Main Building Blocks 

Route :
-------
Routes are the basic building block of an API Gateway.It is Defined by an ID,Destination URI,Collection of Predicates and Collection of Filters etc.
Based on Predicates,Gateway Routes to a Particular Request.
Spring Cloud Gateway provides many built in Routes,Predicate Factories Such as Path,Host,Date/Time,Method,Header etc.

Predicate :
-----------
Nothing But Condition to Match.Based on Condition it will Route to the Particular Service.

Filter :
--------
These are the Instances of Spring Framework Web Filter.
This is the Place where we can Modify the Request or Response.

Spring Cloud Gateway vs Zuul :
******************************
ZuuL 1.x is Not Reactive and it is Blocking.
If We Want to Improve the Performance of MicroServices We can Use Spring Boot 2 With Reactor.
We can use Zuul 2.0 which does Have Reactive Non Blocking Support with Netty.
Spring Eco System Does Not Have In Built Support like Zuul 2.x.
If we want to get The Features of Authentication and Other Security Features Use Spring Cloud Gateway.

We Can do Route Configuration in Spring Cloud Gateway Using Two Approaches :
1.Programatically Using Spring Route Locater
  The Problem with Approach is that When we Update the Route We need Redeploy the Whole Application.
2.Using application.properties 


3.Handler Mapping (Route):
**************************
This is the First Component Where all the Requests Hit.
Handler Mapping looks into each route that is defined and tries to Match With The each Predicate defined inside the route.
After the Match,Handler Mapping routes The request to The Particular Route.

Predicates :
------------
Path Predicate
Host Route Predicate
Date/Time Route Predicate
Method Route Predicate
Header Route Predicate
Query Parameter Route Predicate
Cookies Route Predicate

4.Web Handler Filters :
***********************
We Have PreFilters,Post Filters and Global Filters.
There are Many Filters Provided By Gateway Out Of Box.
It Also Provides the Flexibility to define Our Custom Filters That Can be Either Applied to a Specific Route or to all the Request Coming to the Gateway.

PreFilters :
------------
AddRequestHeader WebFilter
ReWritePath WebFilter
RateLimiting WebFilter
Hystrix WebFilter
Modify Request Body Filter

GlobalFilters :
---------------
Netty Router
Web Sockets
Load Balancer
Metrics

Post Filter :
-------------
Add Response Header Filter
Remove Response Header Filter

		http://localhost:8096/api/v1/first/getRequestHeaderOld
		
		http://localhost:8096/api/v1/second/getRequestHeader

*********************************************************  2.Spring Cloud Gateway Example (Tech Primers) ******************************************************

http://httpbin.org/get   Dummy Rest Service
https://spring.io/guides/gs/gateway/   Gateway Configuration
actuator/hystrix.stream  To Check Enable Hystrix Stream
Hystrix DashBoard :  /hystrix

Routing Information We add in the Gateway Configuration File.
We can also add Routing Information Using yml Configuration File.
Use the Example in the Spring Cloud Guide and Copy in the Configuration File.

URL For Jokes Service :
https://rapidapi.com/LemmoTresto/api/joke3

Here We are Hard Coding the URL of the Services Instead of that We Can use Service Discovery to identify the Services along with the Gateway.
Now the Two Services i.e Countries Service and Jokes Service are Working Fine Now.
Now We Need to Enable Hystrix Service.
For That We Need to Add the Actuator Dependency and run With the End Point actuator/hystrix.stream

 i.e http://localhost:9031/actuator/hystrix.stream
 
For this to Work we need to add the Below Property in  the Application.properties 
management:
  endpoints:
    web:
      exposure:
        include: hystrix.stream
		
		
How Long can I Wait Before I Time Out i.e 

If I Enable Hystrix on Particular Service i.e Countries Service and If the Countries Service Takes More Than 5 Seconds then It Should Fail.
By Default Hystrix Takes One Second and It Fails Here.
Here We need To Mention it in the Properties File.

Now Start the Hystrix DashBoard Service 
and Run With The URL  http://localhost:9032/hystrix

To The DashBoard We Need to Give The URL Of The Stream which Connects to any Hystrix Stream.
We can Have a Central Hystrix DashBoard that Plug in Different Gateway Services which we have in our Project.
Now Add the URL Of The Service With Stream i.e http://localhost:9031/actuator/hystrix.stream to the Hystrix DashBoard and Monitor It.
Now To Work This Add the Hystrix COnfiguration to the Gateway Using Filters.
The Hit The Countries Service and Refresh The DashBoard.
We Can also Have FallBack Mechanism in the Gateway Configuration.


********************************************************* 3.Spring Cloud API Gateway (javainuse) ******************************************************

What is an API Gateway and Why do we need it :
----------------------------------------------


Spring Cloud Gateway Architecture :
-----------------------------------
Spring Cloud Gateway has the following building blocks.

1.Route
2.Predicate 
3.Filter

Route is the basic building block of API Gateway and it consists of ID,destination URI and Collection of predicates and Filters.
Predicate is similar to Java 8 and it can be used to match  http requests such as Headers,URL or Cookies parameters.
Filters can be used to modify the request or response as per the requirement.
When the Client makes a request to the Gateway Gateway HandlerMapping checks whether the request matches to a route or not.
This can be done by using Predicates.If it matches the predicates then it forwards the request to the Filter.

Implementing Spring Cloud Gateway :
-----------------------------------
Routes can be created in either of the two following ways
1.Java based Configuration
2.Property based Configuration

	http://localhost:8096/consumer/message
	
	http://localhost:8096/emloyee/message
	
