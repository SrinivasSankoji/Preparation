1.EC2 Dashboard								   (AWS Management Console)	[29-MAY-2021]  (Done)   							
2.EC2 Introduction   						   (Vishal Padghan)         [21-MAY-2021]  (Done)   (Refer Articles)
3.Connect to Linux Instance using SSH          (Michael Galarnyk)   	[29-MAY-2021]  (Done)
4.EC2 Bootstrap Script          			   ()              		    [22-MAY-2021]  ()
5.EC2 Windows Instance          			   ()             			[22-MAY-2021]  ()
6.EC2 Metadata                                 ()              		    [22-MAY-2021]  ()
7.EC2 Placement Groups                         ()              		    [22-MAY-2021]  ()
8.EC2 AutoScaling                              ()              		    [22-MAY-2021]  ()
9.Spring Boot Docker EC2					   (Simple Programming)		[22-JUN-2021]  ()	
10.Spring Boot Docker EC2					   (Daily Code Buffer)		[22-JUN-2021]  ()		

*******************************************************************  1.EC2 Dashboard	*******************************************************

1.Instances :
Instances
Instance Types
Launch Templates
Spot Requests
Savings Plan
Reserved Instances
Dedicated Hosts
Capacity Reservations
2.Images : 
AMI
3.Elastic Block Store :
Volumes
Snapshot
Lifecycle Manager
4.Network and Security :
Security Groups
Elastic Ips
Placement Groups
Key Pairs
Network Interfaces
5.Load Balancing :
Load Balancers
Target Groups
6.Auto Scaling :
Launch Configurations
Auto Scaling Groups


******************************************************************* 2.EC2 Introduction (Vishal Padghan) ***************************************

1.Drawback
2.Introduction
3.Instance
4.Why EC2
5.Types of EC2 Instances
6.Burstable Performance Instances
7.EBS-Optimized Instances
8.Cluster Networking Instances
9.Dedicated Instances
10.Example
11.How to run systems in EC2
12.Security in AWS EC2
13.Auto Scaling
14.Elastic Load Balancing
15.AWS EC2 Pricing
16.AWS EC2 Use Case

1.Drawback :
------------
It is very difficult to predict how much computing power required for an Application that has just launched.
There may be two scenarios.
We may over estimate the requirement and increase the stack of servers which will be of no use.
We may under estimate the requirement which leads to the crash of an Application.

2.Introduction :
----------------
EC2 is a service from AWS that provides a resizable computing services on the cloud.
Other services include S3,ECS,IAM etc.
Resizable because we can quickly scale up or scale down the number of server instances that we are using,If the computing requirement changes.

EC2 is a way of running the computer in the cloud.
In EC2 we can launch Linux Machine,Windows Machine etc.
EC2 is like having a Computer at the push of a Button.

In EC2 we can run different type of workloads.
We can install wordpress to build a web site.We can also install database and store data directly on EC2.
Imagine we can run everything on EC2.

Note :
Since EC2 is more flexible we don't run everything on EC2.
If we run the database on EC2 we need to manage ourself.
AWS offers RDS which takes care of maintaining our own database.
Here AWS runs it under the hood of EC2.

Note :
When we use EC2 or any other service we use it through an Instance i.e t2.micro instance for EC2.

3.Instance :
------------
Instance is a Virtual Server for running Application on EC2.
It can be considered as a tiny part of a large computer,whcih has its own harddrive,network connection,os etc.
We can have multiple tiny computers on a single physical server and each tiny computer is called as an Instance.

4.Why EC2 :
-----------
As a Developer if we want to work independently, we need to buy a stack of servers.
We estimated the correct capacity and the computing power is enough.
The problem here is If there is any problem in the stack of servers we need to troubleshoot the issue.
We may also need to hire the team to maintain the stack of servers.
Based on load we cannot scale up or scale down the servers with immideate effect.
There are some other problems which makes the EC2 stronger.

5.Types of EC2 Instances :
--------------------------------
Computing is a very broad term and the nature of task decides what kind of computing we need.
AWS EC2 offers 5 types of instances 

General Instances
Compute Instances
Memory Instances
Storage Instances
Accelerated Computing instances

General Instances :
For an Application that require a balance of perfromance and cost effective.
Consider the case of Email Responding Systems where we need a prompt response as well as cost effective because it doesn't require much processing.

Compute Instances :
For an Application that requires a lot of processing from the CPU.
Example : Analysis of data from a stream of data like Twitter.

Memory Instances :
For an Application that are heavy in nature and requires a lot of RAM.
Consider the scenario where lot of Applications are running in the background i.e multitasking.

Storage Instances :
For an Application that are huge in size or occupies a lot of space.

Accelerated Computing instances :
For an Application that requires heavy graphics rendering.
Consider the scenario of 3D modelling etc.

Note :
Every instance has a set of instance type which are optimized for different work loads.

General Instances  : t2,m3,m4
Compute Instances  : c3,c4
Memory Instances   : r3,x1
Storage Instances  : i2,d2
Accelerated Computing instances      : g2

6.Burstable Performance Instances :
-----------------------------------
T2 instances are burstable instances.
This means CPU performs at a baseline of its Capacity.Consider the case of 20 Percent of CPU.
When the Application needs more than 20% of the CPU,then CPU enters into burst mode giving the higher performance for a limited amount of time.
Therefore work happens faster.

We get the CPU Credits when we create an Instance.
Every hour we get certain amount of CPU credits automatically and this depends on type of Instance.
Every time a burst happens in a CPU,CPU credits are used.Each CPU credit gives a burst of 1 minute to the CPU.
If CPU credits are not used they are credited to your account and stay for 24 Hours.
If we are out of CPU credits,Instance will work on CPU baseline performance.
Based on CPU credit balance we can decide whether t2 instance should be scaled up or scaled down.

Example :
Customer's Website Activity should be monitered real time.
There will be a time where the traffic to the website is minimum.
In this Case high processor is not required and is expensive for the company.
We may use t2 instance beacuse it will give burstable CPU performance.
Whenever traffic to the website is high CPU performance will be increased automatically.

7.EBS-Optimized Instances : 
---------------------------
C4,M4 and D2 instances are EBS optimized instances by default.
EBS(Elastic Block Storage) is a persistent block level storage volume that can be used along with EC2 in which IOPS rate is high.
Here Each block acts as a Harddrive.
When an EBS Volume is attached to an instance,Single Digit milli seconds latency can be acheived.

Note :
IOPS(Input Output Operations per Second) is a performance measurement used to characterize computer storage devices.

Example :
Auto Response Mailing System.
We would require a system where the response time is as short as possible.
This can be acheived by using EBS optimized instances where the IOPS rate is high and low latency.

8.Cluster Networking Instances :
--------------------------------
M4,C4,C3,X1,I2,D2,G2 instances support cluster networking.
The instances that are launched into a common placement group and kept in a logical group that provides a high bandwidth and 
low latency between all the instances in the group.

Placement group is a Logical Cluster where some selected EC2 instances which are part of that group can utilize upto 10 GB for single flow
and 20 GB for multiflow traffic in each direction.
Instances which are not part of placement Group are limited to 5 GBPS speed in Multiflow Traffic.

Note :
Cluster networking is ideal for high performance analytics system.

Example :
Search Engine on our Website
It should be able to sort the records and return the relevant results.
Here we might require two servers i.e one server is for database and another server is for processing the keywords.
Communication between the two servers should be at the maximum possible rate.
To acheive this we need to put them in a placement group and for that we use Cluster Networking instances.

9.Dedicated Instances :
-----------------------
These are the instances that run on a single tennant-hardware and dedicated to a single cutomer.

Example :
Some processes in every organization are highly confidential.

11.How to run systems in EC2 :

------------------------------
Login to AWS Account and click on AWS EC2.
Under Create instance Click on Launch Instance.
Whenever we want to Launch an Instance we have to specify which AMI we want to use.It can be Ubuntu,Windows etc.

Select the AMI.AMI's are Templates of OS and they provide the information needed to Launch an Instance.
1.AMI's could be preconfigured or we can configure on its own.
For preconfigured AMI's we have to select it from market place.
For setting up our own,go to quick start and select one.
2.While configuring an AMI,we will reach to a point where we have to select an EBS Option.

EBS i.e Elastic Block Storage is a persistent block level Storage Volume that can be used along with EC2.
Here each block acts as a Hard drive.
Just like Computer needs a Hard drive,EC2 needs a Storage Volume to store the OS which we have specified during the instance creation.
Optons for EBS are 

1.Provisioned IOPS :
This category is for workloads which are mission critical i.e it provides high IOPS rates.
2.General Purpose :
This category is for workloads which needs balance of performance and cost effective.
3.Magnetic :
This category is for workloads where the data is accessed less frequently and retreival time is more.

After selecting the suitable option in EBS,provide a name for an instance and then create the Security Group.

Security Group :
----------------
Security Group acts as a Firewall to control Inbound and Outbound traffic.
Each Security Group has rules according to which the traffic is governed.
Each Instance can be assigned upto 5 Security Groups.

Finally we can see the console that shows all the settings that we have done,verify and launch the instance.

12.Security in AWS EC2 :
------------------------
Whenever we launch an EC2 instance we need to provide the Authentication otherwise any one can access the EC2 instance.
To Authenticate the users to their instances AWS offers a key value pair method.

EC2 uses a public-key and private-key cryptography to encrypt and decrypt login information.
public-key cryptography uses the public-key to encrypt the piece of data such as password.
Then the recepient uses the private-key to decrypt the data.
public-key and private-key are known as key value pair.

13.Auto Scaling :
-----------------
Auto Scaling is a service provided in EC2 using which we can automatically scale up or scale down the instances 
based on user-defined profiles,schedulers and health checks.

14.Elastic Load Balancing :
---------------------------
ELB accepts the incoming network traffic from the client and distributes the traffic across multiple EC2 instances in multiple availability zones.
Availability zones are the places where Amazon has set up their servers.
Since they have the customers across the globe they have set up multiple Availability Zones to reduce the latency.

Elastic IP Address's are the static IP Address's that are associated with our AWS Account.
They can be used to mask the failure of an instance by automatically remapping our address to another working instance in our Account.

15.AWS EC2 Pricing :
--------------------
AWS EC2 Free tier allows 750 Hours of t2.micro instance usage per month.
Free Tier is valid for 1 year.

There are three pricing options in AWS EC2.

1.Spot Instances
The price we set for EC2 is hourly basis.
The moment when the price of the instance becomes greater than what we have set,the instance shut downs automatically.

2.On Demand Instances
These are used when we want to pay for the hour with no long term commitments ad upfront payments.
These are useful for Applications deployed for the first time or test Applications.

3.Reserved Instances
With this we can have reserved instances for a specific period of time with 3 payment options and 2 terms.

No Upfront
Partial Upfront
Full Upfront

1 Year Term
3 Year Term

16.AWS EC2 Use Case :
---------------------
Login to AWS Management Console
Select the Preferred Region
Select the EC2 Service
Click on Launch Instance
Select AMI --> Ubuntu Free Tier
Select the instance --> t2.micro instance

Configure the Instance Details :
Number of Instances : 1
Network : Select the default VPC
Subnet : Select the default Subnet
Select Auto Assign Public IP as Subnet City i.e enable Public IP
Select the Enable Terminate Option i.e we cannot terminate the instance by default.

Add the Storage Details :
select the default

Tag an Instance :
key and Value
Name and Value

Configure the Security Group :
Create the new Security Group.
Select the MyIP in the Source Tab
Then Review and Launch the Instance.

Create Key Pair to launch the Instance.
Downlod the pem file and save it for future use.

Converting Your Private Key Using PuTTYgen :
--------------------------------------------



****************************************** 2.Connect to EC2 Instance using SSH from Ubuntu (Michael Galarnyk)  *********************************

To connect to the EC2 instance from Ubuntu
Navigate to the Folder where the pem file is present
Run the command

	chmod 400 /path to the .pem file
	ssh -i /path to the .pemfile ubuntu@IpAddress
	
To connect to the EC2 instance from Windows :
---------------------------------------------
Select the Instance --> Connect --> Select the Command.
Navigate to the ppk folder --> then run the selected command.
Open the Putty --> Paste the Selected URL in the Session --> ubuntu@ec2-3-109-208-224.ap-south-1.compute.amazonaws.com
Add the UserName in tha Data Section. ie ubuntu
Browse the Generated ppk file in the Auth Section.
Now it will connect to the EC2 instance.

Reference :
-----------
https://www.youtube.com/watch?v=bi7ow5NGC-U


******************************************* 9.Spring Boot Docker EC2  (Simple Programming) *******************************************************








 

 