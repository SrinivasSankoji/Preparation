1.Deploying a Dockerised Web App Using AWS Elastic Container Service      	 (Abdul Rahman)   (Refer Articles)  [25-JUN-2021] ()
2.A beginner’s guide to Amazon’s Elastic Container Service                   (Dominic Fraser) (Refer Articles)  [25-JUN-2021] ()
3.AWS ECS: The Dawn of the Micro-Services						             (Alberto Cubeddu)					
4.How AWS ECS Works 														 (Tung Nguyen)						
5.Overview of AWS Elastic Container Service									 (Karthi Keyan)						[25-JUN-2021] ()
6.SpringBoot Docker ECS														 (Java Techie)						[25-JUN-2021] ()
7.SpringBoot Docker ECR														 (Java Techie)						[25-JUN-2021] ()

********************************* 1.Deploying a Dockerised Web App Using AWS Elastic Container Service (Abdul Rahman) *********************************

1.Introduction
2.Terms and architecture
3.Task Definition
4.Task
5.Service
6.Cluster
7.ECS Container Instance
8.ECS Container Agent

9.Difference between Run-Task and Service    (Karthi Keyan)
10.Task Placement Strategy  (Karthi Keyan)
11.Task Groups  (Karthi Keyan)
12.Task Role    (Karthi Keyan)
13.Task Execution IAM role    (Karthi Keyan)
14.Container Instance IAM Role (Karthi Keyan)
15.Task size,Task Placement Constraints,Memory Limits    (Karthi Keyan)
16.Add Volumes to Container Instances    (Karthi Keyan)

1.Introduction :
----------------
Consider the case of deploying a web application on to an EC2 instance.
Here we are deploying a single Application on single instance.
What If the traffic to an application increases or an instance goes shut down.
This is why we need multiple instances running copies of an Application i.e Cluster.
We also need a LB that accepts the incoming trffic request and based on some conditions in the network traffic redirects the request to one or more instances.
Here we also need Auto Scaling ie if the instance goes down,new instance has to be created.
Based on the traffic instance has to be scaled up or scaled down.

If we have created multiple instances and all the instances shut down at a time.
This is the scenario where ECS comes into the picture.
ECS is Container Management Service that makes it easy to run,manage and stop Docker Containers on a Cluster.
ECS automatically starts up the instances and hosts the Container into that instance.
ECS monitors the EC2 instances and scales up or scale down the number of instances.
ECS can also scale up the number of copies of Containers based on traffic load,CPU and memory needs.
It is compared to Kubernetes,Docker Swarm and Azure Container Service.

ECS runs the containers on a cluster of EC2 instances pre installed with Docker.
ECS takes care of deploying the containers on cluster of EC2 instances,scale,monitor and manage the instances.

Consider the scenario of building an Application that runs on two Docker Conatiners.
One Container to manage the Application and the other to mange the Metrics.
If the traffic to an Application is high we might need to run several pairs of Conatiners.

2.Terms and architecture :
--------------------------
Task Definition
Task
Service
Cluster
ECS Conatiner Instance
ECS Conatiner Agent

3.Task Definition :
-------------------
Task Definition is the blueprint which defines the Docker Containers to run that represents the Application.
Task Definition contains the details of the Docker images,CPU and memory allocation,environment variables,ports to expose and
how Containers communicate with each other.
Task Definition is a kind of docker-compose.yml file.

4.Task :
--------
An instance of a Task Definition ie running the Containers within it.
Sometimes Multiple Tasks can be created by one Task Definition.

5.Service :
-----------
Service gaurantees that some number of Tasks are running all the time.
If the Task exit's due to some Error or the underlying instance is failed or replaced then ECS Service will replace the Task.
This is why we create Cluster so that the Service can have plenty of resources in terms of CPU,Memory and Network Ports to use.
Service Configuration references to a Task Definition.
Service is responsible for creating Tasks.

Example :
Services are typically used for long running Applications.
Services can be used to ensure minimum and maximum number of Tasks that can run at any point of time.
If one Task fails then we have another Two Tasks and the failed Task will be replaced.

6.Cluster :
-----------
ECS Cluster is a logical Group of EC2 instances where we can place Containers into.
ECS handles the logic of scheduling,maintaining and scaling the instances.
ECS also takes care of optimal placement of each Task based on CPU and memory needs.

When an instance launches ECS-Agent registers an EC2 instance to the ECS Cluster.
Cluster can be configured by setting the ECS_CLUSTER in /etc/ecs/ecs.config.

7.ECS Container Instance :
--------------------------
This is an EC2 instance which has Docker and ECS Agent running on it.
Container Instance may run many Tasks from the same or different Services.

8.ECS Container Agent :
------------------------
ECS Container Agent takes care of communication between ECS and Container Instance.
ECS Container Agent provides the status of running Conatiners and manages the newly created one.


  



