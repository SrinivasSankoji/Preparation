1.Jenkins Core Features															[14-SEP-2019] (Done)
2.Jenkins Architecture                                                          [14-SEP-2019] (Done)

3.Jenkins Pipeline as Code                                                      [15-SEP-2019] ()
4.Jenkins Shared Libary                                                         [14-SEP-2019] ()
5.Creating Jenkins Shared Library                                               [14-SEP-2019] ()
6.Parameters in Declarative Pipeline                                            [14-SEP-2019] ()

7.Java Continuous Integration with Jenkins                                      [15-SEP-2019] ()
8.Jenkins PR based builds with Github Pull Request Builder PlugIn               [14-SEP-2019] ()
9.Jenkins Multi-branch Pipeline Detailed Guide for Beginners                    [14-SEP-2019] ()
10.Building Docker Images Using Kaniko & Jenkins on Kubernetes                  [14-SEP-2019] ()


***************************************************** 1.Jenkins Core Features  ************************************************************

The core features of Jenkins are

1.Pipeline as a Code
2.Shared Libraries
3.Better UI and UX
4.Improovements in Security and PlugIns
5.GitOps With Jenkins X

1.Pipeline as a Code :
----------------------
Using Pipeline as a Code we can run paralell builds on a Single Job on different Slaves.
Also we can have a good programatic control over how and what each Jenkins Job should do.
Jenkinsfile is the best way to implement Pipeline as a Code.
There are two types of Pipeline as a Code.

Scripted Pipeline
Declarative Pipeline

It is recomended to use Declarative Pipeline for all kinds of CI/CD workflows as we have more control and customization over Pipelines.

2.Shared Libraries :
--------------------
Shared Library is a great way to reuse the Pipeline as a Code.
We can create the libraries of our CI/CD which can be referenced in our Pipeline Script.
The extended Shared Libary allows us to write custom Groovy Code for more Functionality.

Here is how the Shared Library Works 

1.The common Pipeline Shared Library Code is hosted on a version Control System like GitHub.
2.In Jenkins Global Configuration,Shared Library GitHub Repo needs to be configured.
This enables the access to Library for all the Jenkins Jobs.
3.In an Individual Jobs we just need to add an import statement to import the Shared Libraries and use it in Pipeline as a Code.
During Build time Libary files will be checked out.

5.GitOps With Jenkins X :
-------------------------
Jenkins X is a project from Jenkins for CI/CD on Kubernetes.
This project is entirely different from Jenkins.

******************************************************** 2.Jenkins Architecture  *************************************************************

Jenkins is a Open Source Java Application or a Tool that can be used for CI/CD.
Jenkins has a huge community support and Ocean of PlugIns that can integrate with many Open Source and Enterprise Tools.

Jenkins is mostly used for the following
1.Continuous Integration for Application and Infrastructure Code.
2.Continuous Delivery to deploy the Application into different Environments using Pipeline as a Code.
3.Run batch operations using Jenkins Jobs.
4.Run adhoc operations like backups,cleanups,remote script execution,event triggers etc.

The key components in Jenkins are 

1.Jenkins Server (Master Node)
2.Jenkins Agent Nodes/Clouds
3.Jenkins Web Interface

1.Jenkins Server (Master Node) :
--------------------------------
Jenkins Server or Master Node holds all the key configurations.
Master Node is responsible for managing the workflows defined in the Pipeline.
For example sceduling a Job,Monitoring the Jobs etc.

Jenkins Job :
-------------
Job in Jenkins is also referred to as Pipeline.
Pipeline is a workflow with a group of events or Jobs that are chained and integrated with each other in a sequence.
Event can be of

Clone the Source Code
Build the Source Code
Run the Unit Test Cases
Run the Shell Script
Run the Ansible Role
Execute the Terraform Play etc.

Jenkins PlugIns :
-----------------
PlugIns are the community developed Modules that we can install in our Jenkins Server.
PlugIns helps with more functionalities that are not available in Jenkins.

For example If we want to upload  a file to AWS S3 bucket from Jenkins,use the AWS Jenkins PlugIn 
instead of writing the file upload code in AWS CLI.
Here PlugIn takes care of Error and Exception Handling.

Note :
we can install/upgrade the PlugIns from Jenkins Dashboard.
We can also download the PlugIn and install it by copying it to the PlugIns directory in var/lib/jenkins folder.

Jenkins Global Security :
-------------------------


Jenkins Credentials :
---------------------


Jenkins Nodes/Clouds :
----------------------
We can configure multiple Slave Nodes(Agent Nodes) or Clouds for executing Jenkins Jobs.

Jenkins Global Settings (Configure System) :
--------------------------------------------
We can configure global environment variables under this section.
 
Jenkins Logs :
--------------
Provides logging information on all Jenkins Server actions including Job Logs,PlugIn Logs etc.


2.Jenkins Agent Nodes/Clouds :
------------------------------
Agent Nodes are the Worker Nodes that actually executes the steps that are defined in the Job.
Whenever we create a Job we need to assign an Agent Node for that Job.
When the Job is triggered on the Master actual execution happens in the Agent Node that is configured for that Job.

Note :
------
We can run the Job in Jenkins Server without Agent Node.
In this case Jenkins Server acts as a Worker Node.
However recomended approach is Jenkins Master-Agent setup for different Job requirements.
In this case we don't end up corrupting the Jenkins Server for any system wide configuration changes required for a Job.

Jenkins Master-agent Connectivity :
-----------------------------------
We can connect Jenkins Master and an Agent in two ways.

Using SSH :
-----------
The Connection gets initiated form the Master Server.
There should be connectivity over port 22 between Master and Agent.

Using JNLP(Java Network Launch Protocol) :
------------------------------------------
The Connection gets initiated from the Agent with the Jenkins Master details.
For this Master Node Firewall should allow connectivity on specified JNLP port.

Note :
------
There are two types of Jenkins Agents
Agent Nodes (Static Agents)
Agent Clouds (Dynamic Agents)


**************************************************** 3.Jenkins Pipeline as Code ********************************************************




 
**************************************************** 7.Java Continuous Integration with Jenkins  ***************************************






