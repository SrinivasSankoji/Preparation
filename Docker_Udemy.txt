1.Introduction															[15-MAY-2020] (Done)
2.Docker Commands                                                       [15-MAY-2020] ()
3.Docker Run                                                            [16-MAY-2020] ()
4.Docker Images                                                         [16-MAY-2020] ()
5.Docker Compose                                                        [16-MAY-2020] ()
6.Docker Registry                                                       [15-MAY-2020] ()
7.Docker Engine,Storage and Networking                                  [15-MAY-2020] ()
8.Docker on Windows                                                     [15-MAY-2020] ()
9.Container Orchestration Docker Swarm and Kubernetes                   [15-MAY-2020] ()
10.Conclusion                                                           [15-MAY-2020] ()


******************************************************  1.Introduction  ***********************************************************************

2.Overview :
------------
To set up an End to End Application Stack including various Technologies Like 
Web Server using Node JS
Database Using Mongo DB
Messaging System like Redis
Orchestration tool Like Ansible.

There might be lot of Issues while developing the Application Stack.
One of them is Compatibility with the Underlying OS.
we have to make sure all of these technologies are Compatible with OS Version.
We also neeed to check the Compatibility with Libraries and Dependencies with the Underlying OS.
This Compatibility Metric Issue is usually referred to as Metric Hell.


Everytime a New Developer is OnBoarded we found lot of Issues in setting up the Environment.
New Developer has to follow large set of Instructions and remember Hundred's of Command to set up the Environment.
They have to make sure that they are using the Right OS,Right Version of each of these Components.
Each Developer has to set the Environment for each Time.
We also have different Development Environments.
Different Developers may use Different OS.
We may not Gaurantee that the Application run on One OS will run on another OS.
All of these i.e developing,building and shipping the Application become more Difficult.
we need something to sort out the Compatibility Issue,allow us to modify the components without effecting the Other Components,
even modify the Underlying OS if required.


With Docker we can be able to run Each Component in a Seperate Container with its own dependencies and its own Libraries
all on the same OS and VM but within the Seperate Containers.
We just had to build the Docker Configuration Once and all the Developers could get Started with Simple Docker run Command.
Irrespective of what the Underlying Operating System they have,they just need the Docker installed on the System.


Containers :
------------
Containers are Completedly isolated Environments,they can have their own Processors,Services,Networking Interfaces ,Own Mounts
just Like Virtual Machines except they all share the Same OS Kernel.
Docker utilizes LXE Containers.

Setting up the Container is very hard and it is very LowLevel.
Docker Offers aHigh Level tool with several powerful Functionalities making it really easy to create the Container.

Any Operating System Consists of two things.

1.OS Kernel
2.Software

OS Kernel is responsible for interacting with underlying Hardware
and the Software makes the Operating System Different.

This Software may Consists of Different User Interfaces, drivers,Compilers,File Managers,Developer tools etc.
We have Common Linux Kernel Shared across all OS and some software that differentiates the OS.

Docker Containers share the Underlying Kernel.
Consider the Case we have an ubuntu Syatem that have docker installed on it.
Docker can run any flavor of OS on top of it as long as they are on the Same Kernel and in this case Linux.

If the Underlying OS is ubuntu,Docker can run a Container based on another distribution of ubuntu.
Here each Docker Container only  has Additional Software that makes the Operating System different and
Docker utilizes the Underlying Kernel of the Docker Host which works with all OS above.

The OS do not share the same kernel is Windows.
we wont be able to run a windows based Container on a Docker host with Linux on it.
For that we require a Docker on a Windows Server.


When we install Docker Container on windows and run a container based on Linux.
when we install docker on windows and run a Linux Container on windows, we are not really running a Linux Container on windows.
Windows run a Linux Container on a Linux Virtual Machine under the hood.


Docker is not meant to virtualize and run different OS kernels on the Same Hardware.
The Main purpose of Docker is to package and containerize the Application and ship them so that it can be run any where an anytime as many times we want.


In case od Docker we have underlying Hardware Infrastructure ,OS and then Docker is installed on the OS.
Docker manages the Containers that runs with the Libraries and Dependencies.
In case of Virtual Machine we have Hypervisor on the hardware and the Virtual Machines on them.
Each virtual Machine has its own OS,Libraries,Dependencies and then the Application.


Virtual Machine consumes the Higher Disksapce where as Docker Container consumes MegaBytes.
This makes the Docker Container to boot up Faster where as VM will takes minutes to boot up.

There are lots of Containerized version of Applicationn readily today.
Most Organizations containerized their Applications today and made them Publicly Available on Docker Hub.
Example :

		docker run mongodb 

runs the mongodb database on the docker Host.
We can also run the Multiple Instances of th e Wen Service and configure a Load Balancer in the Front.
In case if one of the Instance is Failed,Simply destroy the Insatnce and launc any one.


Docker image is a package or Template just like a VM Template and is used to create on ore More Containers.
Containers are running Instances of Images that are Isolated and have their own Environment and set of Process.
We can also create our own image and push it into DockerHub and available for public.


Traditionalyy Developer develop the Application and give it to the Operations for Deployment in Production.
Developer do this by Providing the Set of Instructions.
Since the Operations Team does not have any Idea of the Application they Struggle while Deploying the Application.
In case of Deocker Developer provide the Application along with the Docker File to the Operations Team.
This Docker File is used to create an Image to the Application and run on any environmet with Docker installed on it.


3.Getting Started with Docker :
-------------------------------




4.Note on INstalling Docker :
-----------------------------




5.Demo Setup and Install Docker :
---------------------------------




6.Resources :
-------------







******************************************************  2.Docker Commands  **********************************************************************

1.Basic Docker Commands :
-------------------------


2.Demo Docker Commands :
------------------------


3.Demo Docker Labs :
--------------------


4.lab Basic Docker Commands :
-----------------------------



******************************************************  3.Docker Run     *************************************************************************

1.Docker Run :
--------------



2.Advanced Docker Run Features :
--------------------------------



3.Lab Docker Run :
------------------



******************************************************   4.Docker Images   *************************************************************************

1.Docker Images :
-----------------



2.Creating New Docker Image :
-----------------------------



3.Environment Variables :
-------------------------




4.Command vs EntryPoint :
-------------------------


******************************************************   5.Docker Compose   **************************************************************************

1.Docker Compose :
------------------


2.YAML :
--------




3.Voting Application :
----------------------




4.Voting Application with Docker Compose :
------------------------------------------



******************************************************   6.Docker Registry  *************************************************************************



